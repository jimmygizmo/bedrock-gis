# DEVELOPMENT

networks:
  bedrock-network:

volumes:
  dbvolume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./dbvolume

services:


  # ---- POSTGRES ----    [DEV]
  bedrock-postgres:
    container_name: bedrock-postgres
    build: ./postgres
    image: bedrock-postgres
#    image: ${AWS_USER_ID_NUMBER}.dkr.ecr.us-west-2.amazonaws.com/${AWS_REPO_NAME}:bedrock-postgres
#    image: 555555555555.dkr.ecr.us-west-2.amazonaws.com/your-aws-repo-name:bedrock-postgres
    restart: unless-stopped
    networks:
      - bedrock-network
    ports:  # Not for production use:
      - "45432:5432"
    volumes:
      - ./dbvolume:/bitnami/postgresql
    environment:
      - "POSTGRES_DB=bedrockdb"
      - "POSTGRES_USER=bedrock"
      - "POSTGRES_PASSWORD=bedrock"
#      - "POSTGRES_USER=${POSTGRES_USER}"
#      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"


  # ---- PGADMIN ----    [DEV]
  bedrock-pgadmin:
    container_name: bedrock-pgadmin
    build: ./pgadmin
    image: bedrock-pgadmin
#    image: ${AWS_USER_ID_NUMBER}.dkr.ecr.us-west-2.amazonaws.com/${AWS_REPO_NAME}:bedrock-pgadmin
#    image: 555555555555.dkr.ecr.us-west-2.amazonaws.com/your-aws-repo-name:bedrock-pgadmin
    depends_on:
      - bedrock-postgres
    restart: unless-stopped
    networks:
      - bedrock-network
    ports:  # Not for production use:
      - "45088:80"
    environment:
      - "PGADMIN_DEFAULT_EMAIL=bedrock@bedrock.zone"
      - "PGADMIN_DEFAULT_PASSWORD=bedrock"


  # ---- BEDROCK (FASTAPI) ----    [DEV]
  # On PostgreSQL, uses logical DB Name: bedrockdb
  bedrock-bedrock:
    container_name: bedrock-bedrock
    build: ./bedrock
    image: bedrock-bedrock
#    image: ${AWS_USER_ID_NUMBER}.dkr.ecr.us-west-2.amazonaws.com/${AWS_REPO_NAME}:bedrock-bedrock
#    image: 555555555555.dkr.ecr.us-west-2.amazonaws.com/your-aws-repo-name:bedrock-bedrock
    depends_on:
      - bedrock-postgres
    restart: unless-stopped
    networks:
      - bedrock-network
    ports:  # Not for production use:
      - "48000:8000"
#    volumes:
#      - ./vol-env:/env
    environment:
      - "STACK_ENV=DEVELOPMENT"
      - "FASTAPI_LOG_LEVEL=DEBUG"
      - "POSTGRES_DB=bedrockdb"
      - "POSTGRES_USER=bedrock"
      - "POSTGRES_PASSWORD=bedrock"
#      - "POSTGRES_USER=${POSTGRES_USER}"
#      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    command: [
      "/appdir/wait-for-it.sh",
      "--host=bedrock-postgres",
      "--port=5432",
      "--timeout=20",
      "--",
      "gunicorn",
      "-w",
      "4",
      "-k",
      "uvicorn.workers.UvicornWorker",
      "magmastart:app",
      "--bind",
      "0.0.0.0:8000",
    ]


  # ---- NOTEBOOK ----    [DEV]
  bedrock-notebook:
    container_name: bedrock-notebook
    build: ./notebook
    image: bedrock-notebook
#    image: ${AWS_USER_ID_NUMBER}.dkr.ecr.us-west-2.amazonaws.com/${AWS_REPO_NAME}:bedrock-notebook
#    image: 555555555555.dkr.ecr.us-west-2.amazonaws.com/your-aws-repo-name:bedrock-notebook
    depends_on:
      - bedrock-postgres
      - bedrock-bedrock
    restart: unless-stopped
    networks:
      - bedrock-network
    ports:  # Not for production use:
      - "48888:8888"
    volumes:
      - ./notebook:/home/bedrock/workspace
    environment:
      - "JUPYTERLAB_SETTINGS_DIR=/home/bedrock/workspace"
      - "MAPBOX_TOKEN=998877665544332211"
      # TODO: Clatify/comment BASE_URL. Needs a much better name.
      - "BASE_URL=http://localhost:48000"
#      - "JUPYTER_TOKEN="  # This did not work but the startup options below did work.
#      - "JUPYTER_PASSWORD="  # This did not work but the startup options below did work.
    command: [
      "start-notebook.sh",
      "--NotebookApp.token=''",
      "--NotebookApp.password=''",
    ]

