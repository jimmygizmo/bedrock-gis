# .gitignore generally for: FastAPI, Flask, React, Next.js, IntelliJ IDEs, MacOS, Docker, more
#
# Bedrock-GIS
#

# The build dir seems to appear from local pip installs like the "pip install ." to install Magma.
# An egg info dir is also created but that is already covered in this .gitignore.
build/

# In many of the following, we keep the about file there and ignore all else. (The same is done for .gitkeep files.)

# datavolume and dbvolume
# Git will not add anything inside this directory except the .gitkeep file which allows git to store an empty dir.
# UPDATE: Added the inner ex-assets dir in the same way. I want this kept here in the repo but EMPTY, only with the .gitkeep.
datavolume/*
!datavolume/.gitkeep
datavolume/ex-assets/*
!datavolume/ex-assets/.gitkeep

dbvolume/*
!dbvolume/.gitkeep
logvolume/*
!logvolume/.gitkeep
# TODO: I will be expanding logging, so I will want some subdirs to divide logs by their service.


# To keep binaries out of the repo, I moved stuff in this express/assets dir into a subdir in datavolume.
# So this dir is now empty, but I want to keep it in the repo, so I add the .gitkeep. TODO: Probably want to keep this
# dir like this, but I think there is a build copy step we can disable/remove. Basically, all images and video and such
# will be kept in a formal structure, outside the repo in tagged/datetime tarballs as backups. Maybe Git LFS.
# TODO: Formalize DATAVOLUME structure to mirror locally and on the EC2 volume.
express/public/express/assets/*
!express/public/express/assets/.gitkeep

# /nginx/www/ target of combined /xwww/ content and /.next/ build output
nginx/www/*
!nginx/www/about-nginx-www.txt


# /nginx/nodesrc the destination of the React build output copied by prep script.
# Builds at start of NGINX Dockerfile. ** Now there are two apps, two dirs: aidb, smartmetal
# SMARTMETAL
nginx/nodesrc-smartmetal/*
!nginx/nodesrc-smartmetal/.gitkeep
# AIDB
nginx/nodesrc-aidb/*
!nginx/nodesrc-aidb/.gitkeep
# AUTODASH
nginx/nodesrc-autodash/*
!nginx/nodesrc-autodash/.gitkeep


# SSL:/TLS Certificates and Other Secrets
secrets/*
!secrets/about-secrets.txt

# SSL:/TLS Certificates - Build location
nginx/certs/*
!nginx/certs/about-nginx-certs.txt

# TODO: This would be good to put in place with just (time > version.txt) at minimum. BUT, SmartMetal needs the Intranet
# under /ll1l1l1ll/ added as this is only in BotFolk at the moment. What does ** do again? Inside ANY directory?
# I guess that works sort of, but I would rather be specific.
#
# Build version file created at build+deploy time by auto script
**/ll1l1l1ll/version.txt

# Idea for an env template. Not yet implemented.
_env-template

# PyCharm, WebStorm, IntelliJ IDEs
.idea/

# Pyenv - I do keep .python-version in the repo and use standardized v.e. names.

#
# BotFolk.ai
#

# /node/
node/*
!node/about-node.txt
!node/node-notes.txt
!node/Dockerfile


# Next.js
.next

# REACT POSSIBLE ITEMS
### react ###
#*.log
#logs
#**/*.backup.*
#**/*.back.*


# MacOS
.DS_Store

#####################################################################

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port



# ABOVE HERE IS THE SMARTMETAL 5-STACK 2025 VERSION. MIGHT HAVE STARTED AS PYTHON OR REACT.
########################################
# BELOW HERE IS THE GITHUB PYTHON VERSION

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc
